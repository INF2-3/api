-- MySQL Script generated by MySQL Workbench
-- Wed Mar 15 13:45:50 2023
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema quintor
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema quintor
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `quintor` DEFAULT CHARACTER SET utf8 ;
USE `quintor` ;

-- -----------------------------------------------------
-- Table `quintor`.`description`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `quintor`.`description` (
  `descriptionId` INT NOT NULL,
  `returnReason` VARCHAR(255) NULL,
  `clientReference` VARCHAR(255) NULL,
  `endToEndReference` VARCHAR(255) NULL,
  `paymentInformionId` VARCHAR(255) NULL,
  `instructionId` VARCHAR(255) NULL,
  `mandateReference` VARCHAR(255) NULL,
  `creditorId` VARCHAR(255) NULL,
  `counterpartyId` VARCHAR(255) NULL,
  `remittanceInformation` VARCHAR(255) NULL,
  `purposeCode` VARCHAR(255) NULL,
  `ultimateCreditor` VARCHAR(255) NULL,
  `ultimateDebtor` VARCHAR(255) NULL,
  `exchangeRate` VARCHAR(255) NULL,
  `charges` VARCHAR(255) NULL,
  PRIMARY KEY (`descriptionId`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `quintor`.`fileDescription`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `quintor`.`fileDescription` (
  `fileDescriptionId` INT NOT NULL,
  `numberOfDebitEntries` INT(6) NOT NULL,
  `numberOfCreditEntries` INT(6) NOT NULL,
  `amountOfDebitEntries` DECIMAL(15) NOT NULL,
  `amountOfCreditEntries` DECIMAL(15) NOT NULL,
  PRIMARY KEY (`fileDescriptionId`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `quintor`.`role`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `quintor`.`role` (
  `roleId` INT NOT NULL,
  `roleName` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`roleId`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `quintor`.`user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `quintor`.`user` (
  `userId` INT NOT NULL AUTO_INCREMENT,
  `email` VARCHAR(255) NOT NULL,
  `password` VARCHAR(255) NOT NULL,
  `roleId` INT NOT NULL,
  `username` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`userId`),
  UNIQUE INDEX `email_UNIQUE` (`email` ASC) VISIBLE,
  UNIQUE INDEX `username_UNIQUE` (`username` ASC) VISIBLE,
  UNIQUE INDEX `userId_UNIQUE` (`userId` ASC) VISIBLE,
  INDEX `roleId_idx` (`roleId` ASC) VISIBLE,
  CONSTRAINT `roleId`
    FOREIGN KEY (`roleId`)
    REFERENCES `quintor`.`role` (`roleId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `quintor`.`file`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `quintor`.`file` (
  `fileId` INT NOT NULL,
  `transactionReferenceNumber` VARCHAR(16) NOT NULL,
  `accountNumber` VARCHAR(35) NOT NULL,
  `statementNumber` INT(5) NOT NULL,
  `fileDescriptionId` INT NOT NULL,
  `lastUpdatedUser` INT NOT NULL,
  `uploadDate` DATE NOT NULL,
  `filecol` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`fileId`),
  INDEX `fileDescriptionId_idx` (`fileDescriptionId` ASC) VISIBLE,
  INDEX `lastUpdatedUser_idx` (`lastUpdatedUser` ASC) VISIBLE,
  CONSTRAINT `fileDescriptionId`
    FOREIGN KEY (`fileDescriptionId`)
    REFERENCES `quintor`.`fileDescription` (`fileDescriptionId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `lastUpdatedUser`
    FOREIGN KEY (`lastUpdatedUser`)
    REFERENCES `quintor`.`user` (`userId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `quintor`.`category`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `quintor`.`category` (
  `categoryId` INT NOT NULL,
  `name` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`categoryId`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `quintor`.`transaction`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `quintor`.`transaction` (
  `id` INT NOT NULL,
  `valueDate` DATE NOT NULL,
  `entryDate` INT(4) NOT NULL,
  `debit/credit` ENUM("d", "c") NOT NULL,
  `amount` DECIMAL(15) NOT NULL,
  `transactionCode` VARCHAR(4) NOT NULL,
  `referenceOwner` VARCHAR(16) NULL,
  `institutionReference` VARCHAR(16) NULL,
  `supplementaryDetails` VARCHAR(34) NULL,
  `originalDescriptionId` INT NOT NULL,
  `description` VARCHAR(500) NULL,
  `fileId` INT NOT NULL,
  `categoryId` INT NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  INDEX `originalDescriptionId_idx` (`originalDescriptionId` ASC) VISIBLE,
  INDEX `fileId_idx` (`fileId` ASC) VISIBLE,
  INDEX `categoryId_idx` (`categoryId` ASC) VISIBLE,
  CONSTRAINT `originalDescriptionId`
    FOREIGN KEY (`originalDescriptionId`)
    REFERENCES `quintor`.`description` (`descriptionId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fileId`
    FOREIGN KEY (`fileId`)
    REFERENCES `quintor`.`file` (`fileId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `categoryId`
    FOREIGN KEY (`categoryId`)
    REFERENCES `quintor`.`category` (`categoryId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `quintor`.`balance`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `quintor`.`balance` (
  `balanceId` INT NOT NULL,
  `debit/credit` ENUM("d", "c") NOT NULL,
  `date` DATE NOT NULL,
  `currency` VARCHAR(3) NOT NULL,
  `amount` DECIMAL(15) NOT NULL,
  `type` ENUM("opening", "closing_book", "closing_available", "forward_available") NOT NULL,
  `fileId` INT NOT NULL,
  PRIMARY KEY (`balanceId`),
  INDEX `fileId_idx` (`fileId` ASC) VISIBLE,
  CONSTRAINT `fileId`
    FOREIGN KEY (`fileId`)
    REFERENCES `quintor`.`file` (`fileId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
